name: Code Quality

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Run clippy (no features)
        run: cargo clippy --no-default-features -- -D warnings
      
      - name: Run clippy (default features)
        run: cargo clippy -- -D warnings
      
      - name: Run clippy (all features)
        run: cargo clippy --all-features --all-targets -- -D warnings
      
      - name: Run clippy on tests
        run: cargo clippy --tests --all-features -- -D warnings
      
      - name: Run clippy on examples
        run: cargo clippy --examples --all-features -- -D warnings
  
  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      
      - name: Check formatting
        run: cargo fmt --all -- --check
  
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Build documentation (no features)
        run: cargo doc --no-deps --no-default-features
        env:
          RUSTDOCFLAGS: -D warnings
      
      - name: Build documentation (default features)
        run: cargo doc --no-deps
        env:
          RUSTDOCFLAGS: -D warnings
      
      - name: Build documentation (all features)
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: -D warnings
      
      - name: Test documentation examples
        run: cargo test --doc --all-features
  
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        run: cargo audit
  
  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.75.0  # MSRV from Cargo.toml
      
      - name: Check MSRV
        run: cargo check --all-features
  
  deny:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-deny
        run: cargo install cargo-deny
      
      - name: Create deny.toml if not exists
        run: |
          if [ ! -f "deny.toml" ]; then
            echo '[bans]' > deny.toml
            echo 'multiple-versions = "warn"' >> deny.toml
            echo '[licenses]' >> deny.toml
            echo 'unlicensed = "deny"' >> deny.toml
            echo 'allow = ["MIT", "Apache-2.0", "BSD-3-Clause", "ISC", "Unicode-DFS-2016"]' >> deny.toml
          fi
      
      - name: Check dependencies
        run: cargo deny check
